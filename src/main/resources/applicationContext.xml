<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2010 The myBatis Team Licensed under the Apache License, Version 
	2.0 (the "License"); you may not use this file except in compliance with 
	the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
     http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- 定时器开关 start @Scheduled -->
	<task:annotation-driven />
	<!-- 定时器开关 end -->
	<!--将dataSource的内容自动注入 -->
	<context:property-placeholder location="classpath*:*.properties" />
	<!-- 数据源 -->
	<bean id="commonDataSourceProperties" abstract="true"
		destroy-method="close">
		<!-- 数据库驱动 -->
		<property name="driverClass" value="${jdbc.driver.mysql}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
		<property name="idleConnectionTestPeriod" value="240" />
		<!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
		<property name="idleMaxAge" value="60" />
		<!-- 每个分区最大的连接数 -->
		<property name="maxConnectionsPerPartition" value="5" />
		<!-- 每个分区最小的连接数 -->
		<property name="minConnectionsPerPartition" value="5" />
		<!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定 -->
		<property name="partitionCount" value="4" />
		<!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->
		<property name="acquireIncrement" value="2" />
		<!-- 缓存prepared statements的大小，默认值：0 -->
		<property name="statementsCacheSize" value="30" />
		<!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->
		<property name="releaseHelperThreads" value="3" />
	</bean>

	<!-- 数据源 master -->
	<bean id="targetDataSource" parent="commonDataSourceProperties"
		class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	<!-- 数据源 slave -->
	<bean id="targetDataSource-read" parent="commonDataSourceProperties"
		class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
		<property name="jdbcUrl" value="${jdbc.url.read}" />
		<property name="username" value="${jdbc.username.read}" />
		<property name="password" value="${jdbc.password.read}" />
	</bean>

	<bean id="readWriteDataSource" class="com.fatface.datasource.ReadWriteDataSource">
		<property name="writeDataSource" ref="targetDataSource" />
		<property name="readDataSourceMap">
			<map>
				<entry key="readDataSource1" value-ref="targetDataSource-read" />
			</map>
		</property>
	</bean>

	<bean id="readWriteDataSourceTransactionProcessor" class="com.fatface.datasource.ReadWriteDataSourceProcessor">
		<property name="forceChoiceReadWhenWrite" value="true" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<ref local="readWriteDataSource" />
		</property>
	</bean>

	<!-- <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close"> 
		数据库驱动 <property name="driverClass" value="${jdbc.driver.mysql}" /> <property 
		name="jdbcUrl" value="${jdbc.url}" /> <property name="username" value="${jdbc.username}" 
		/> <property name="password" value="${jdbc.password}" /> 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 
		<property name="idleConnectionTestPeriod" value="240" /> 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 
		<property name="idleMaxAge" value="60" /> 每个分区最大的连接数 <property name="maxConnectionsPerPartition" 
		value="20" /> 每个分区最小的连接数 <property name="minConnectionsPerPartition" value="20" 
		/> 分区数 ，默认值2，最小1，推荐3-4，视应用而定 <property name="partitionCount" value="4" /> 
		每次去拿数据库连接的时候一次性要拿几个,默认值：2 <property name="acquireIncrement" value="2" /> 
		缓存prepared statements的大小，默认值：0 <property name="statementsCacheSize" value="30" 
		/> 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 <property 
		name="releaseHelperThreads" value="3" /> </bean> -->
	<!-- define the SqlSessionFactory, notice that configLocation is not needed 
		when you use MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:sqlmap-config.xml" />
	</bean>
	<!-- ================================事务相关控制================================================= -->
	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 拦截器方式配置事物 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="persistence*" propagation="REQUIRED" />

			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<!-- ensure that the above transactional advice runs for any execution of 
		an operation defined by the FooService interface -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="fooServiceOperation"
			expression="execution(* com.fatface.service..*.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="fooServiceOperation" />

		<!-- 通过AOP切面实现读/写库选择 -->
		<aop:aspect order="-2147483648" ref="readWriteDataSourceTransactionProcessor">
			<aop:around pointcut-ref="fooServiceOperation" method="determineReadOrWriteDB" />
		</aop:aspect>
	</aop:config>

	<!-- 自动扫描mybatis mapper 接口 如果有多个可以用逗号或者分号分割开来 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.fatface.dao" />
		<property name="markerInterface" value="com.fatface.dao.SqlMapper" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>
</beans>